#!/bin/bash

# Function to write log messages
log_message() {
    echo "$(date +"%Y-%m-%d %H:%M:%S") $1" | tee -a /tmp/autorestic_backup.log
    if [ -z "$2" ]
    then
        curl "Priority: low" -d "$1" {{ autorestic_ntfy_topic }}
    else
        curl "Priority: ${2}" -d "$1" {{ autorestic_ntfy_topic }}
    fi
}

# check that containers are running
if ! docker ps --filter name=nc-db | grep -q "nc-db"
then
    log_message "Nextcloud database container is not running" default
    exit 1
fi

if ! docker ps --filter name=nextcloud | grep -q "nextcloud"
then
    log_message "Nextcloud container is not running" default
    exit 1
fi

# Set maintenance mode
log_message "Enabling maintenance mode for Nextcloud"
if ! docker exec -u {{ nextcloud_uid }} nextcloud php occ maintenance:mode --on
then
    log_message "Failed to enable maintenance mode" default
    exit 1
fi

log_message "Creating backup of Nextcloud database"

# Create backup directory
if ! mkdir -p "{{ appdata_path }}/nextcloud/db-backup"
then
    log_message "Failed to create backup directory" default
    exit 1
fi

# Create gzipped DB backup
currentDate=$(date +"%Y%m%d-%H%M%S")
backupFile="{{ appdata_path }}/nextcloud/db-backup/nextcloud-db-${currentDate}.sql.gz"
if ! docker exec "nc-db" /usr/bin/mariadb-dump --single-transaction --default-character-set=utf8mb4 -u "root"  -p"{{ container_mysql_root_password }}" "nextcloud" | gzip -c > "${backupFile}"
then
    log_message "Failed to create backup" default
    exit 1
fi
log_message "Database backup created"

# Create ZFS snapshot
log_message "Creating ZFS snapshots of Nextcloud data"
/usr/sbin/zfs destroy "{{ zfs_pools[0].name }}/nextcloud@restic" || true
if ! (/usr/sbin/zfs snapshot "{{ zfs_pools[0].name }}/nextcloud@${currentDate}" && /usr/sbin/zfs snapshot "{{ zfs_pools[0].name }}/nextcloud@restic")
then
    log_message "Failed to create ZFS snapshots" default
    exit 1
fi

# Disable maintenance mode
log_message "Disabling maintenance mode for Nextcloud"
if ! docker exec -u {{ nextcloud_uid }} nextcloud php occ maintenance:mode --off
then
    log_message "Failed to disable maintenance mode" default
    exit 1
fi

log_message "Backup successful"
