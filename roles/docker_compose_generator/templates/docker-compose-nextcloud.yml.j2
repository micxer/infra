{{ ansible_managed | comment }}
---
services:
  nextcloud:
    container_name: nextcloud
    depends_on:
      nc-db:
        condition: service_healthy
      nc-redis:
        condition: service_healthy
    devices:
      - /dev/dri:/dev/dri
    environment:
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: "{{ nextcloud_mysql_password }}"
      MYSQL_HOST: nc-db
      NEXTCLOUD_ADMIN_USER: "{{ nextcloud_admin_user }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ nextcloud_admin_password }}"
      NEXTCLOUD_TRUSTED_DOMAINS: "nextcloud.{{ local_domain }}"
      SMTP_HOST: "{{ nextcloud_smtp_host }}"
      SMTP_SECURE: tls # tls | ssl | <empty>  
      SMTP_PORT: 587
      SMTP_AUTHTYPE: PLAIN # LOGIN | PLAIN | CRAM-MD5 | <empty>
      SMTP_NAME: "{{ nextcloud_smtp_name }}"
      SMTP_PASSWORD: "{{ nextcloud_smtp_password }}"
      MAIL_FROM_ADDRESS: notify # local-part for the 'from' field in the emails sent by Nextcloud
      MAIL_DOMAIN: "nextcloud.{{ local_domain }}"
      PHP_MEMORY_LIMIT: 1024M # 512M is the minimum recommended by Nextcloud
      PHP_UPLOAD_LIMIT: 1024M # 512M is the minimum recommended by Nextcloud
      # APACHE_DISABLE_REWRITE_IP: 1  # using empty remoteip.conf
      TRUSTED_PROXIES: 172.20.1.2
      REDIS_HOST: nc-redis
    healthcheck:
      test: curl -sSf 'http://localhost/status.php' | grep '"installed":true' | grep '"maintenance":false' | grep '"needsDbUpgrade":false' || exit 1
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 10
    image: "{{ docker_compose_generator_nextcloud_image }}"
    labels:
      traefik.enable: true
      traefik.http.middlewares.nextcloud_redirect.redirectregex.permanent: true
      traefik.http.middlewares.nextcloud_redirect.redirectregex.regex: 'https://(.*)/.well-known/(?:card|cal)dav'
      traefik.http.middlewares.nextcloud_redirect.redirectregex.replacement: 'https://$${1}/remote.php/dav'
      traefik.http.middlewares.nextcloud_sameorigin.headers.customFrameOptionsValue: "sameorigin"
      traefik.http.routers.nextcloud.rule: Host(`nextcloud.{{ local_domain }}`)
      traefik.http.routers.nextcloud.entrypoints: websecure
      traefik.http.routers.nextcloud.middlewares: "nextcloud_redirect@docker,nextcloud_sameorigin@docker,default@file"
      traefik.http.routers.nextcloud.tls.options: modern@file
      traefik.http.routers.nextcloud.priority: 10  # for notify_push
      traefik.docker.network: traefik-net
    networks:
      - traefik
      - nextcloud
    restart: unless-stopped
    user: "{{ nextcloud_uid }}:{{ nextcloud_gid }}"
    volumes:
      - "{{ docker_compose_generator_nextcloud_base_path }}/custom_apps:/var/www/html/custom_apps"
      - "{{ docker_compose_generator_nextcloud_base_path }}/data:/var/www/html/data"
      - "{{ docker_compose_generator_nextcloud_base_path }}/config:/var/www/html/config"
      - "{{ docker_compose_generator_nextcloud_base_path }}/remoteip.conf:/etc/apache2/conf-available/remoteip.conf:ro"
      - "{{ docker_compose_generator_nextcloud_base_path }}/redis-session.ini:/usr/local/etc/php/conf.d/redis-session.ini"


  ###
  # - service_name: notify_push
  #   active: true
  #   image: "{{ docker_compose_generator_nextcloud_image }}"
  #   user: "{{ nextcloud_uid }}:{{ nextcloud_gid }}"
  #   networks:
  #     - proxy
  #     - nextcloud
  #   environment:
  #     PORT:7867
  #     NEXTCLOUD_URL: http://nextcloud  # don't go through the proxy to contact the nextcloud server
  #   entrypoint: /var/www/html/custom_apps/notify_push/bin/x86_64/notify_push /var/www/html/config/config.php
  #   volumes:
  #     - "{{ docker_compose_generator_nextcloud_base_path }}/custom_apps:/var/www/html/custom_apps"
  #     - "{{ docker_compose_generator_nextcloud_base_path }}/config:/var/www/html/config"
  #   labels:
  #     traefik.enable: true
  #     traefik.http.routers.nextcloud_notify_push.entrypoints: websecure
  #     traefik.http.routers.nextcloud_notify_push.priority: 11
  #     # necessary for the notify_push app to work:
  #     traefik.http.routers.nextcloud_notify_push.rule: Host(`nextcloud.{{ local_domain }}`) && PathPrefix(`/push`)
  #   depends_on:
  #     - nextcloud
  #   restart: unless-stopped
  ###
  # cron:
  #   container_name: cron
  #   # special UID handling https://github.com/nextcloud/docker/issues/1740
  #   depends_on:
  #     - nextcloud
  #   entrypoint: /cron.sh
  #   environment:
  #     UID: "{{ nextcloud_uid }}"
  #     MYSQL_DATABASE: nextcloud
  #     MYSQL_USER: nextcloud
  #     MYSQL_PASSWORD: "{{ nextcloud_mysql_password }}"
  #     MYSQL_HOST: nc-db
  #     NEXTCLOUD_TRUSTED_DOMAINS: "nextcloud.{{ local_domain }}"
  #     SMTP_HOST: "{{ nextcloud_smtp_host }}"
  #     SMTP_SECURE: tls # tls | ssl | <empty>  
  #     SMTP_PORT: 587
  #     SMTP_AUTHTYPE: PLAIN # LOGIN | PLAIN | CRAM-MD5 | <empty>
  #     SMTP_NAME: "{{ nextcloud_smtp_name }}"
  #     SMTP_PASSWORD: "{{ nextcloud_smtp_password }}"
  #     MAIL_FROM_ADDRESS: notify # local-part for the 'from' field in the emails sent by Nextcloud
  #     MAIL_DOMAIN: "nextcloud.{{ local_domain }}"
  #     PHP_MEMORY_LIMIT: 1024M # 512M is the minimum recommended by Nextcloud
  #     PHP_UPLOAD_LIMIT: 1024M # 512M is the minimum recommended by Nextcloud
  #     APACHE_DISABLE_REWRITE_IP: 1
  #     TRUSTED_PROXIES: "172.20.1.2"
  #     REDIS_HOST: nc-redis
  #   image: "{{ docker_compose_generator_nextcloud_image }}"
  #   networks:
  #     - nextcloud
  #   restart: unless-stopped
  #   volumes:
  #     - "{{ docker_compose_generator_nextcloud_base_path }}/custom_apps:/var/www/html/custom_apps"
  #     - "{{ docker_compose_generator_nextcloud_base_path }}/data:/var/www/html/data"
  #     - "{{ docker_compose_generator_nextcloud_base_path }}/config:/var/www/html/config"
  #     - "{{ docker_compose_generator_nextcloud_base_path }}/cron.sh:/cron.sh"
  ###
  nc-db:
    command:
      - --datadir=/var/lib/mysql/data
      - --innodb-log-group-home-dir=/var/lib/mysql/log
      - --transaction-isolation=READ-COMMITTED
      - --log-bin=binlog
      - --binlog-format=MIXED
      - --sync-binlog=0
      - --skip-innodb-doublewrite
      - --innodb_file_per_table
      - --innodb-flush-neighbors=0
      - --innodb-use-native-aio=0
      - --innodb-use-atomic-writes=0
      - --innodb-compression-default=0
      - --innodb-flush-log-at-trx-commit=0
      - --innodb-file-per-table
      - --innodb-io-capacity=1000
      - --innodb-io-capacity-max=2500
      # https://kitcharoenp.github.io/mysql/zfs/mariadb/2021/10/18/zfs-tunning-optimization.html#mysql-tuning-and-optimization-for-zfs
    container_name: nc-db
    environment:
      MARIADB_ROOT_PASSWORD: "{{ container_mysql_root_password }}"
      MARIADB_DATABASE: nextcloud
      MARIADB_USER: nextcloud
      MARIADB_PASSWORD: "{{ nextcloud_mysql_password }}"
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--defaults-extra-file=/var/lib/mysql/data/.my-healthcheck.cnf", "--connect", "--innodb_initialized"]
      start_period: 15s
      interval: 10s
      timeout: 5s
      retries: 5
    image: mariadb:lts
    networks:
      - nextcloud
    restart: unless-stopped
    volumes:
      - "{{ appdata_path }}/mariadb:/var/lib/mysql"
  ###
  nc-redis:
    container_name: nc-redis
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 5s
      interval: 10s
      timeout: 3s
      retries: 3
    image: redis:bookworm
    networks:
      - nextcloud
    restart: unless-stopped
    # doesn't work so far :(
    #user: ${UID}:${GID}
  ###

networks:
  traefik:
    name: traefik-net
    external: true
  nextcloud:
    name: nextcloud-net
    internal: true
    ipam:
      config:
        - subnet: 172.20.2.0/24
