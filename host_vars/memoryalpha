---
# generic settings
main_username: micxer
main_groupname: "{{ main_username }}"
main_uid: "1000"
main_gid: "{{ main_uid }}"
docker_username: docker
docker_groupname: docker
docker_uid: "1003"
docker_gid: "999"
nextcloud_username: nextcloud
nextcloud_groupname: "{{ nextcloud_username }}"
nextcloud_uid: "1004"
nextcloud_gid: "{{ nextcloud_uid }}"

# geerlingguy.docker
docker_users:
  - micxer
  - ansible

# grog.package
package_list:
  - name: bash-completion
  - name: rsync
  - name: smartmontools
  - name: tmux
  - name: vim-runtime
  - name: vim-tiny
  - name: zsh

# ironicbadger.bash-aliases (formerly ferrarimarco.bash-aliases)
bash_aliases:
  - { alias: "zsnap", command: "zfs list -t snapshot" }
  - { alias: "zspace", command: "zfs list -o space | sort -k4 --human-numeric-sort" }
  - { alias: "dtail", command: "docker logs -tf --tail='50' "}
  - { alias: "dctr", command: "docker-compose -f {{ homestack_output_path }}/docker-compose-traefik.yml -p traefik-stack"}
  - { alias: "dcnc", command: "docker-compose -f {{ homestack_output_path }}/docker-compose-nextcloud.yml -p nextcloud-stack"}
  - { alias: "dcmon", command: "docker-compose -f {{ homestack_output_path }}/docker-compose-monitoring.yml -p monitoring-stack"}
  - { alias: "dprune", command: "docker image prune"}
  - { alias: "dprunesys", command: "docker system prune --all"}
  - { alias: "ctop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop"}

# micxer.docker_compose_homestack
appdata_path: /mnt/storage
local_domain: "home.{{ base_domain }}"

#traefik config
traefik_file_provider: true
traefik_config_path: "{{ appdata_path }}/traefik"

homestack_uid: "{{ docker_uid }}"
homestack_gid: "{{ docker_gid }}"

homestack_traefik_version: 2.11.16
homestack_traefik_hostingde_domain: "{{ base_domain }}"
homestack_traefik_base_domain: "home.{{ base_domain }}"
homestack_traefik_base_path: "{{ appdata_path }}/traefik"
homestack_error_pages_version: 2.27
homestack_error_pages_theme: matrix

homestack_nextcloud_uid: "{{ nextcloud_uid }}"
homestack_nextcloud_gid: "{{ nextcloud_gid }}"
homestack_output_path: "/home/docker/home-stack"
homestack_nextcloud_base_path: "{{ appdata_path }}/nextcloud"
homestack_nextcloud_user: "{{ nextcloud_username }}"
homestack_nextcloud_group: "{{ nextcloud_groupname }}"
homestack_nextcloud_image_version: 29.0.10-apache
homestack_nextcloud_mysql_path: "{{ appdata_path }}"
homestack_nextcloud_base_domain: "{{ local_domain }}"

homestack_monitoring_base_domain: "home.{{ base_domain }}"
homestack_monitoring_prometheus_image_version: v2.55.1
homestack_monitoring_prometheus_base_path: "{{ appdata_path }}/prometheus"
homestack_monitoring_grafana_base_path: "{{ appdata_path }}/grafana"

# mrlesmithjr.zfs
zfs_install_update: true
ubuntu_apt_repository: http://ubuntu.mirror.lrz.de/ubuntu/
zfs_key_file: "/etc/zfs/storage.key"

zfs_create_pools: true
zfs_pools:
  - name: new-storage
    action: create
    devices:
      - ata-WDC_WD120EDBZ-11B1HA0_5QGZGB4F
      - ata-WDC_WD120EDBZ-11B1HA0_5QGZWKGF
    type: mirror
    atime: off
    compression: lz4
    xattr: sa
    acltype: posixacl
    options:
      - "-o ashift=12"
      - "-m {{ appdata_path }}"
      - "-o feature@encryption=enabled"
      - "-O encryption=aes-256-gcm"
      - "-O keylocation=file://{{ zfs_key_file }}"
      - "-O keyformat=passphrase"
    state: present

zfs_autoload_encryption_keys: true
zfs_create_filesystems: true
zfs_manage_filesystem_permissions: true
zfs_filesystems:
  - name: traefik # Filesystems for the traefik configuration and Let's Encrypt certificates
    pool: new-storage
    # latency (default) | throughput
    logbias: latency
    # Define an alternate mountpoint
    # mountpoint: "{{ appdata_path }}/traefik/"
    # all (default) | none | metadata
    quota: 256M
    # Controls whether the snapshots devices of zvol's are hidden or visible. hidden (default) | visible
    snapdev: hidden
    # Controls whether the .zfs directory is hidden or visible in the root of the file system. hidden (default) | visible
    snapdir: hidden
    state: present
  - name: nextcloud
    pool: new-storage
    owner: "{{ nextcloud_username }}"
    group: "{{ nextcloud_groupname }}"
    mountpoint: "{{ appdata_path }}/nextcloud"
    # latency (default) | throughput
    logbias: latency
    quota: 1T
    # Controls whether the snapshots devices of zvol's are hidden or visible. hidden (default) | visible
    snapdev: hidden
    # Controls whether the .zfs directory is hidden or visible in the root of the file system. hidden (default) | visible
    snapdir: hidden
    state: present
  - name: nc-db # One filesystem for the database and one for the logs to enable different settings
    pool: new-storage
    owner: "node-exp"
    group: "{{ docker_groupname }}"
    mountpoint: "{{ appdata_path }}/nc-db"
    quota: 5G
    primarycache: metadata
    snapdev: hidden
    snapdir: hidden
    state: present
  - name: nc-db/log
    pool: new-storage
    owner: "node-exp"
    group: "{{ docker_groupname }}"
    mountpoint: "{{ appdata_path }}/nc-db/log"
    quota: 1G
    recordsize: 128k
    snapdev: hidden
    snapdir: hidden
    state: present
  - name: nc-db/data
    pool: new-storage
    owner: "node-exp"
    group: "{{ docker_groupname }}"
    mountpoint: "{{ appdata_path }}/nc-db/data"
    quota: 4G
#    logbias: throughput
    recordsize: 16k
    snapdev: hidden
    snapdir: hidden
    state: present
#   sync: disabled  # maybe one more option to increase performance, see https://kitcharoenp.github.io/mysql/zfs/mariadb/2021/10/18/zfs-tunning-optimization.html
  - name: windows-ssd
    pool: new-storage
    quota: 250G
    snapdev: hidden
    snapdir: hidden
    state: present
  - name: prometheus
    pool: new-storage
    logbias: latency
    quota: 4G
    snapdev: hidden
    snapdir: hidden
    state: present
  - name: grafana
    pool: new-storage
    logbias: latency
    quota: 1G
    snapdev: hidden
    snapdir: hidden
    state: present
  
  # - name: Shares/Movies
  #   compression: lz4
  #   group: nogroup
  #   mountpoint: /TANK/Shares/Movies
  #   owner: nobody
  #   pool: TANK
  #   quota: none
  #   sharesmb: true
  #   smb_options:
  #     browseable: "yes"
  #     comment: ""
  #     create_directory_mask: "0755"
  #     create_mask: "0777"
  #     guest_ok: "yes"
  #     read_only: "no"
  #     share_name: Movies
  #     writable: "yes"
  #   xattr: sa
  #   acltype: posixacl
  #   state: present
  #   #standard (default) | always | disabled
  #   sync: disabled
  # - name: encrypted-fs
  #   pool: tank
  #   state: present
  #   # The encryption algorithm to use, or just "on" to use the default one picked by ZFS.
  #   encryption: aes-256-gcm
  #   # Where to lookup the key on the filesystem.  Prompt is not supported by this role.
  #   keylocation: "file:///use/local/etc/zfs/keys/tank/encyrpted-fs"
  #   # passphrase | hex | raw
  #   keyformat: "hex"

zfs_enable_auto_snapshots: false

# defines global scrub cron job parameters. Only applies when `zfs_enable_monitoring` is set to True.
zfs_pools_scrub_cron:
  minute: 42
  hour: 0
  day: "15"
  month: "*"
  weekday: "*"

zfs_enable_monitoring: false
zfs_monitoring_scrub_max_age: 8

# backup
backup_script_path: /root/bin

# dbrennand.autorestic
autorestic_version: 1.8.3
autorestic_restic_version: 0.17.3
autorestic_config_file: /root/.autorestic.yml
autorestic_config:
  version: 2
  backends:
    backblaze:
      type: s3
      path: s3.eu-central-003.backblazeb2.com/memoryalpha-restic-backup
      key: "{{ autorestic_key }}"
      env:
        AWS_ACCESS_KEY_ID: "{{ autorestic_AWS_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "{{ autorestic_AWS_SECRET_ACCESS_KEY }}"
  locations:
    nextcloud:
      cron: "15 1 * * *"
      from: "{{ appdata_path }}/nextcloud/.zfs/snapshot/restic"
      to: backblaze
      forget: prune
      hooks:
        before:
          - "{{ backup_script_path }}/nextcloud_container_backup_before.sh"
        success:
          - "{{ backup_script_path }}/nextcloud_container_backup_success.sh"
        failure:
          - "{{ backup_script_path }}/nextcloud_container_backup_failure.sh"
      options:
        forget:
          keep-daily: 7 # keep 4 last daily snapshots
          keep-weekly: 8 # keep 1 last weekly snapshots
          keep-monthly: 12 # keep 12 last monthly snapshots
          keep-yearly: 7 # keep 7 last yearly snapshots
          keep-within: '14d' # keep snapshots from the last 14 days
autorestic_info: true
autorestic_check: false  # snapshot directory doesn't exist yet
autorestic_cron: true
autorestic_cron_verbose: true
autorestic_state: present
