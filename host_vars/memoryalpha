---
# generic settings
main_username: micxer
main_groupname: "{{ main_username }}"
main_uid: "1000"
main_gid: "{{ main_uid }}"

# geerlingguy.docker
docker_users:
  - micxer
  - ansible

# grog.package
package_list:
  - name: vim-tiny
  - name: vim-runtime
  - name: zsh
  - name: smartmontools
  - name: tmux
  - name: rsync

# ironicbadger.bash-aliases (formerly ferrarimarco.bash-aliases)
bash_aliases:
  - { alias: "zspace", command: "zfs list -o space" }
  - { alias: "zsnap", command: "zfs list -o space | sort -k4 --human-numeric-sort" }
  - { alias: "dtail", command: "docker logs -tf --tail='50' "}
  - { alias: "dstop", command: "docker stop `docker ps -aq`"}
  - { alias: "drm", command: "docker rm `docker ps -aq`"}
  - { alias: "dcp", command: "docker-compose -f ~/docker-compose.yml "}
  - { alias: "dcporph", command: "docker-compose -f ~/docker-compose.yml --remove-orphans "}
  - { alias: "dprune", command: "docker image prune"}
  - { alias: "dprunesys", command: "docker system prune --all"}
  - { alias: "ctop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock http://quay.io/vektorlab/ctop "}
  - { alias: "sshlist", command: "echo Currently open ssh connections && echo && l ~/.ssh/multiplex/"}
  - { alias: "dfclean", command: "df -h -x tmpfs -x zfs -t fuse.mergerfs -t xfs -t ext4"}
  - { alias: "dfzfs", command: "df -h -x tmpfs -t fuse.mergerfs -t xfs -t ext4 -t zfs"}

# mrlesmithjr.zfs
zfs_install_update: true
ubuntu_apt_repository: http://ubuntu.mirror.lrz.de/ubuntu/
zfs_key_file: "/etc/zfs/storage.key"

zfs_create_pools: true
zfs_pools:
  - name: new-storage
    action: create
    devices:
      - ata-WDC_WD120EDBZ-11B1HA0_5QGZGB4F
      - ata-WDC_WD120EDBZ-11B1HA0_5QGZWKGF
    type: mirror
    atime: off
    compression: lz4
    xattr: sa
    acltype: posixacl
    options:
      - "-o ashift=12"
      - "-m /mnt/storage"
      - "-o feature@encryption=enabled"
      - "-O encryption=aes-256-gcm"
      - "-O keylocation=file://{{ zfs_key_file }}"
      - "-O keyformat=passphrase"
    state: present

zfs_autoload_encryption_keys: true
zfs_create_filesystems: true
zfs_filesystems:
  - name: traefik
    pool: new-storage
    # latency (default) | throughput
    logbias: latency
    # Define an alternate mountpoint
    # mountpoint: /var/lib/docker
    # all (default) | none | metadata
    quota: 256M
    # Controls whether the snapshots devices of zvol's are hidden or visible. hidden (default) | visible
    snapdev: hidden
    # Controls whether the .zfs directory is hidden or visible in the root of the file system. hidden (default) | visible
    snapdir: hidden
    state: present
  # - name: nextcloud
  #   pool: new-storage
  #   # latency (default) | throughput
  #   logbias: latency
  #   # Define an alternate mountpoint
  #   # mountpoint: /var/lib/docker
  #   # all (default) | none | metadata
  #   quota: 1T
  #   # Controls whether the snapshots devices of zvol's are hidden or visible. hidden (default) | visible
  #   snapdev: hidden
  #   # Controls whether the .zfs directory is hidden or visible in the root of the file system. hidden (default) | visible
  #   snapdir: hidden
  #   state: present

  # - name: Shares/Movies
  #   compression: lz4
  #   group: nogroup
  #   mountpoint: /TANK/Shares/Movies
  #   owner: nobody
  #   pool: TANK
  #   quota: none
  #   sharesmb: true
  #   smb_options:
  #     browseable: "yes"
  #     comment: ""
  #     create_directory_mask: "0755"
  #     create_mask: "0777"
  #     guest_ok: "yes"
  #     read_only: "no"
  #     share_name: Movies
  #     writable: "yes"
  #   xattr: sa
  #   acltype: posixacl
  #   state: present
  #   #standard (default) | always | disabled
  #   sync: disabled
  # - name: encrypted-fs
  #   pool: tank
  #   state: present
  #   # The encryption algorithm to use, or just "on" to use the default one picked by ZFS.
  #   encryption: aes-256-gcm
  #   # Where to lookup the key on the filesystem.  Prompt is not supported by this role.
  #   keylocation: "file:///use/local/etc/zfs/keys/tank/encyrpted-fs"
  #   # passphrase | hex | raw
  #   keyformat: "hex"

zfs_enable_auto_snapshots: false

# defines global scrub cron job parameters. Only applies when `zfs_enable_monitoring` is set to True.
zfs_pools_scrub_cron:
  minute: 42
  hour: 0
  day: "15"
  month: "*"
  weekday: "*"

zfs_enable_monitoring: false
zfs_monitoring_scrub_max_age: 8

# ironicbadger.docker_compose_generator
appdata_path: /mnt/storage
local_domain: "home.{{ base_domain }}"

containers:
  ###
  - service_name: traefik
    active: true
    image: traefik
    container_name: tr
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.hostingde.acme.dnschallenge=true
      - --certificatesresolvers.hostingde.acme.dnschallenge.provider=hostingde
      - "--certificatesresolvers.hostingde.acme.email={{ letsencrypt_email }}"
    volumes:
      - "{{ appdata_path }}/traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      HOSTINGDE_API_KEY: "{{ hostingde_api_key }}"
      HOSTINGDE_ZONE_NAME: "{{ base_domain }}"
    restart: unless-stopped
  ###
  # - service_name: nextcloud
  #   active: true
  #   image: nextcloud:25-fpm
  #   devices:
  #     - /dev/dri:/dev/dri
  #   depends_on:
  #     - mysql
  #   labels:
  #     - "traefik.http.routers.nc.rule=Host(`nextcloud.{{ local_domain }}`)"
  #   environment:
  #     MYSQL_DATABASE: nextcloud
  #     MYSQL_USER: nextcloud
  #     MYSQL_PASSWORD: "{{ nextcloud_mysql_password }}"
  #     MYSQL_HOST: mariadb
  #     NEXTCLOUD_ADMIN_USER: "{{ nextcloud_admin_user }}"
  #     NEXTCLOUD_ADMIN_PASSWORD: "{{ nextcloud_admin_password }}"
  #     NEXTCLOUD_DATA_DIR: "{{ appdata_path }}/nextcloud/data"
  #     NEXTCLOUD_TRUSTED_DOMAINS: "nextcloud.{{ local_domain }}"
  #     SMTP_HOST: "{{ nextcloud_smtp_host }}"
  #     SMTP_SECURE: tls # tls | ssl | <empty>
  #     SMTP_PORT: 587
  #     SMTP_AUTHTYPE: LOGIN # LOGIN | PLAIN | CRAM-MD5 | <empty>
  #     SMTP_NAME: "{{ nextcloud_smtp_name }}"
  #     SMTP_PASSWORD: "{{ nextcloud_smtp_password }}"
  #     MAIL_FROM_ADDRESS: notify # local-part for the 'from' field in the emails sent by Nextcloud
  #     MAIL_DOMAIN: "nextcloud.{{ local_domain }}"
  #     PHP_MEMORY_LIMIT: 512M # 512M is the minimum recommended by Nextcloud
  #     PHP_UPLOAD_LIMIT: 512M # 512M is the minimum recommended by Nextcloud
  #   volumes:
  #     - "{{ appdata_path }}/nextcloud:/var/www/html"
  #     - "{{ appdata_path }}/nextcloud/data:/var/www/html/data"
  #   restart: unless-stopped
  ###
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - "traefik.http.routers.nginxtest.rule=Host(`test.{{ local_domain }}`)"
      - traefik.http.routers.nginxtest.entrypoints=websecure
      - traefik.http.routers.nginxtest.tls.certresolver=hostingde
    restart: unless-stopped
